name: CI/CD Pipeline with TCM Jira Change Management

on:
  push:
    branches: [main]
    paths-ignore:
      - 'kubernetes/deployment.yaml'
  pull_request:
    branches: [main]

env:
  JIRA_USER_EMAIL: ${{ secrets.JIRA_USER_EMAIL }}
  JIRA_API_TOKEN: ${{ secrets.JIRA_API_TOKEN }}
  JIRA_BASE_URL: ${{ secrets.JIRA_BASE_URL }}
  DOCKER_REGISTRY: ghcr.io
  DOCKER_USERNAME: ${{ github.actor }}
  DOCKER_PASSWORD: ${{ secrets.TOKEN }}

jobs:

  test:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4
      - uses: actions/setup-node@v4
        with:
          node-version: '20'
          cache: 'npm'
      - run: npm ci
      - run: npm test
        continue-on-error: true

  lint:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4
      - uses: actions/setup-node@v4
        with:
          node-version: '20'
          cache: 'npm'
      - run: npm ci
      - run: npm run lint

  build:
    runs-on: ubuntu-latest
    needs: [test, lint]
    steps:
      - uses: actions/checkout@v4
      - uses: actions/setup-node@v4
        with:
          node-version: '20'
          cache: 'npm'
      - run: npm ci
      - run: npm run build
      - uses: actions/upload-artifact@v4
        with:
          name: build-artifacts
          path: dist/

  create-tcm-ticket:
    runs-on: ubuntu-latest
    needs: build
    outputs:
      issue_key: ${{ steps.create.outputs.issue_key }}
    steps:
      - uses: actions/checkout@v4
      - uses: actions/setup-python@v4
        with:
          python-version: '3.x'
      - run: pip install requests
      - id: vars
        run: |
          COMMIT_SHA=${{ github.sha }}
          COMMIT_MSG=$(git log -1 --pretty=%B)
          COMMIT_AUTHOR=$(git log -1 --pretty=%ae)

          if git diff-tree --no-commit-id --name-only -r $COMMIT_SHA | grep -q '^frontend/'; then
            SERVICE="Application – Web Front End"
          else
            SERVICE="Application – Integration Layer"
          fi

          echo "commit_sha=$COMMIT_SHA" >> $GITHUB_OUTPUT
          echo "commit_msg<<EOF" >> $GITHUB_OUTPUT
          echo "$COMMIT_MSG" >> $GITHUB_OUTPUT
          echo "EOF" >> $GITHUB_OUTPUT
          echo "commit_author=$COMMIT_AUTHOR" >> $GITHUB_OUTPUT
          echo "service=$SERVICE" >> $GITHUB_OUTPUT

      - id: create
        env:
          JIRA_USER_EMAIL: ${{ env.JIRA_USER_EMAIL }}
          JIRA_API_TOKEN: ${{ env.JIRA_API_TOKEN }}
          JIRA_BASE_URL: ${{ env.JIRA_BASE_URL }}
          COMMIT_SHA: ${{ steps.vars.outputs.commit_sha }}
          COMMIT_MSG: ${{ steps.vars.outputs.commit_msg }}
          COMMIT_AUTHOR: ${{ steps.vars.outputs.commit_author }}
          AFFECTED_SERVICE: ${{ steps.vars.outputs.service }}
        run: python scripts/create_tcm_jira_issue.py

  docker:
    runs-on: ubuntu-latest
    needs: build
    outputs:
      image_tag: ${{ steps.set.outputs.image_tag }}
    steps:
      - uses: actions/checkout@v4
      - uses: actions/download-artifact@v4
        with:
          name: build-artifacts
          path: dist/
      - uses: docker/setup-buildx-action@v3
      - uses: docker/login-action@v3
        with:
          registry: ${{ env.DOCKER_REGISTRY }}
          username: ${{ env.DOCKER_USERNAME }}
          password: ${{ env.DOCKER_PASSWORD }}
      - id: meta
        uses: docker/metadata-action@v5
        with:
          images: ${{ env.DOCKER_REGISTRY }}/${{ github.repository }}
          tags: |
            type=sha,format=long
            type=ref,event=branch
            latest
      - uses: docker/build-push-action@v5
        with:
          context: .
          push: true
          tags: ${{ steps.meta.outputs.tags }}
          labels: ${{ steps.meta.outputs.labels }}
      - id: set
        run: echo "image_tag=$(echo ${{ github.sha }} | cut -c1-7)" >> $GITHUB_OUTPUT

  deploy-prod:
    runs-on: ubuntu-latest
    needs: [docker, create-tcm-ticket]
    environment:
      name: production
    steps:
      - uses: actions/checkout@v4
        with: 
          token: ${{ secrets.TOKEN }}
      - uses: actions/setup-python@v4
        with:
          python-version: '3.x'
      - run: pip install requests
      - name: Wait for TCM ticket to reach 'Implementing'
        env:
          ISSUE_KEY: ${{ needs.create-tcm-ticket.outputs.issue_key }}
          JIRA_USER_EMAIL: ${{ env.JIRA_USER_EMAIL }}
          JIRA_API_TOKEN: ${{ env.JIRA_API_TOKEN }}
          JIRA_BASE_URL: ${{ env.JIRA_BASE_URL }}
        run: python scripts/wait_until_jira_status.py --issue $ISSUE_KEY --status Implementing
      - name: Update Kubernetes deployment with new image tag
        env:
          IMAGE_TAG: sha-${{ github.sha }}
        run: |
          git config user.name "GitHub Actions"
          git config user.email "actions@github.com"
          sed -i "s|image: ghcr.io/.*|image: ghcr.io/${{ github.repository }}:${IMAGE_TAG}|g" kubernetes/deployment.yaml
          git add kubernetes/deployment.yaml
          git commit -m "Update K8s deployment: ${IMAGE_TAG} [skip ci]" || echo "No changes"
          git push